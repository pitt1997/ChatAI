server:
  port: 3000
  servlet:
    session:
      tracking-modes: COOKIE
      timeout: 60m
      cookie:
        httpOnly: false
        path: /
        name: JSESSIONID
    context-path: /auth
spring:
  application:
    name: auth
  security:
    index-path: /index
  session:
    store-type: redis # session.setAttribute() 时将会话数据存储到 Redis 中
    redis:
      flush-mode: on_save # 可选值：on_save、immediate、none
      namespace: auth:session # Redis 中存储会话数据的命名前缀
      cleanup-cron: 0 0/2 * * * ? # 每 2 分钟执行一次过期会话清理任务
  freemarker: # freemarker 配置，授权码模式页面渲染使用
    suffix: .ftl
    template-loader-path: classpath:/templates/
    request-context-attribute: request
  cloud:
    nacos:
      username: nacos
      password: nacos
      discovery:
        server-addr: 127.0.0.1:8848
        enabled: true  # 确保服务发现启用
      config:
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
  datasource:
    url: jdbc:h2:mem:testdb # 由于mybatis组件依赖但是又不需要真的数据源，所以配置一个假数据源
    driver-class-name: org.h2.Driver
    username: sa
    password: password
    hikari:
      connection-test-query: SELECT 1
  redis:
    sentinel:
      master: #mymaster
      nodes: 127.0.0.1:26379,127.0.0.1:26380,127.0.0.1:26381
    host: 127.0.0.1
    port: 6379
    database: 1 # 默认使用 0 库
    password:
  config:
    import:
      - optional:nacos:application-@profiles.active@.yml
      - optional:nacos:${spring.application.name}-@profiles.active@.yml



