1.默认情况下，Gateway 只会匹配 spring.cloud.gateway.routes 里显式配置的 id 和 uri 进行路由转发。
2.开启 discovery.locator.enabled=true 后，Gateway 会自动从注册中心（如 Nacos、Eureka）获取所有已注册的服务，并为每个服务动态生成一个路由：
  - 路由的 id 为 服务名称
  - 默认匹配路径 为 /{serviceId}/**
  - 请求会转发到 lb://{serviceId}（负载均衡到相应的微服务）
3.注意：在 application.yml 里配置了 server.servlet.context-path=/api，但实际访问时，直接访问 http://localhost:8099/chatai-admin/**
就能访问到 chatai-admin，说明 context-path 没有生效。这是因为 Spring Cloud Gateway 本质上基于 WebFlux（Reactive），而 server.servlet.context-path
仅对 Servlet 环境生效，不影响 WebFlux 组件。

Gateway 会自动为 chatai-admin 和 chatai-auth 创建路由：
http://localhost:8099/chatai-admin/api/** → lb://chatai-admin
http://localhost:8099/chatai-auth/api/** → lb://chatai-auth

http://localhost:8099/chatai-admin/api/admin/user/current → http://localhost:8080/admin/user/current

http://localhost:8099/chatai-admin/api/admin/user/search?username=xxx

网关暴露登录地址：
http://localhost:8099/chatai-auth/api/auth/login

-> 发现未登录跳转登录
http://localhost:8099/login



                          +---------------------------------------+
                          |          前端/客户端 (浏览器, App)       |
                          +---------------------------------------+
                                       │
                                       ▼
                         ┌─────────────────────────┐
                         │  Spring Cloud Gateway   │
                         │  统一网关 + JWT 鉴权      │
                         └─────────────────────────┘
                                       │
                 ┌─────────────────────┴─────────────────────┐
                 ▼                                           ▼
    ┌─────────────────────────────┐              ┌─────────────────────────────┐
    │     Auth Server (认证服务器)  │              │      业务 API (微服务)        │
    │ OAuth2 认证, JWT 生成,用户管理 │ ←── JWT ───  │  业务处理, 权限校验            │
    └─────────────────────────────┘              └─────────────────────────────┘
                                                         │
                                                         ▼
                                           ┌──────────────────────────┐
                                           │  其他业务 API (Feign 调用) │
                                           └──────────────────────────┘
